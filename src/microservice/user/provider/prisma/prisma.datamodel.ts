export const userDataModels = {
   User: {
      name: 'User',
      dbName: null,
      fields: [
         {
            name: 'id',
            dbName: '_id',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: true,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'String',
            default: {
               name: 'auto',
               args: [],
            },
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'username',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: true,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'email',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: true,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'name',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'password',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'status',
            kind: 'enum',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'UserStatus',
            default: 'Pending',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'createdAt',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'DateTime',
            default: {
               name: 'now',
               args: [],
            },
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'createdBy',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: true,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'updatedAt',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'DateTime',
            isGenerated: false,
            isUpdatedAt: true,
         },
         {
            name: 'updatedBy',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: true,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'author',
            kind: 'object',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'User',
            relationName: 'author',
            relationFromFields: ['createdBy'],
            relationToFields: ['id'],
            relationOnDelete: 'NoAction',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'createdUsers',
            kind: 'object',
            isList: true,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'User',
            relationName: 'author',
            relationFromFields: [],
            relationToFields: [],
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'editor',
            kind: 'object',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'User',
            relationName: 'editor',
            relationFromFields: ['updatedBy'],
            relationToFields: ['id'],
            relationOnDelete: 'NoAction',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'updatedUsers',
            kind: 'object',
            isList: true,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'User',
            relationName: 'editor',
            relationFromFields: [],
            relationToFields: [],
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'createdRoles',
            kind: 'object',
            isList: true,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'Role',
            relationName: 'roleAuthor',
            relationFromFields: [],
            relationToFields: [],
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'updatedRoles',
            kind: 'object',
            isList: true,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'Role',
            relationName: 'roleEditor',
            relationFromFields: [],
            relationToFields: [],
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'userRoles',
            kind: 'object',
            isList: true,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'UserRole',
            relationName: 'UserToUserRole',
            relationFromFields: [],
            relationToFields: [],
            isGenerated: false,
            isUpdatedAt: false,
         },
      ],
      primaryKey: null,
      uniqueFields: [],
      uniqueIndexes: [],
      isGenerated: false,
   },
   Role: {
      name: 'Role',
      dbName: null,
      fields: [
         {
            name: 'id',
            dbName: '_id',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: true,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'String',
            default: {
               name: 'auto',
               args: [],
            },
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'name',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: true,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'description',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'status',
            kind: 'enum',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'RoleStatus',
            default: 'Drafted',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'root',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'Boolean',
            default: false,
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'createdAt',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'DateTime',
            default: {
               name: 'now',
               args: [],
            },
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'createdBy',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: true,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'updatedAt',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'DateTime',
            isGenerated: false,
            isUpdatedAt: true,
         },
         {
            name: 'updatedBy',
            kind: 'scalar',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: true,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'author',
            kind: 'object',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'User',
            relationName: 'roleAuthor',
            relationFromFields: ['createdBy'],
            relationToFields: ['id'],
            relationOnDelete: 'SetNull',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'editor',
            kind: 'object',
            isList: false,
            isRequired: false,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'User',
            relationName: 'roleEditor',
            relationFromFields: ['updatedBy'],
            relationToFields: ['id'],
            relationOnDelete: 'SetNull',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'userRoles',
            kind: 'object',
            isList: true,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'UserRole',
            relationName: 'RoleToUserRole',
            relationFromFields: [],
            relationToFields: [],
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'permissions',
            kind: 'scalar',
            isList: true,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
      ],
      primaryKey: null,
      uniqueFields: [],
      uniqueIndexes: [],
      isGenerated: false,
   },
   UserRole: {
      name: 'UserRole',
      dbName: null,
      fields: [
         {
            name: 'id',
            dbName: '_id',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: true,
            isReadOnly: false,
            hasDefaultValue: true,
            type: 'String',
            default: {
               name: 'auto',
               args: [],
            },
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'userId',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: true,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'roleId',
            kind: 'scalar',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: true,
            hasDefaultValue: false,
            type: 'String',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'user',
            kind: 'object',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'User',
            relationName: 'UserToUserRole',
            relationFromFields: ['userId'],
            relationToFields: ['id'],
            relationOnDelete: 'Cascade',
            isGenerated: false,
            isUpdatedAt: false,
         },
         {
            name: 'role',
            kind: 'object',
            isList: false,
            isRequired: true,
            isUnique: false,
            isId: false,
            isReadOnly: false,
            hasDefaultValue: false,
            type: 'Role',
            relationName: 'RoleToUserRole',
            relationFromFields: ['roleId'],
            relationToFields: ['id'],
            relationOnDelete: 'Cascade',
            isGenerated: false,
            isUpdatedAt: false,
         },
      ],
      primaryKey: null,
      uniqueFields: [],
      uniqueIndexes: [],
      isGenerated: false,
   },
};
